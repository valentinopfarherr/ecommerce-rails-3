= README

This repository contains the solution to the evaluation challenge for the Development and Technology team at Puntospoint. Below are the instructions for setting up the server and testing the implemented functionalities.

== Usage Instructions

=== Setting Up the Server

To set up the server, follow these steps:

1. Clone this repository to your local machine.
2. Install project dependencies using Bundler.
3. Configure the PostgreSQL database and ensure you have Ruby 1.9.3 and Rails 3.
4. Run database migrations with the command `rails db:migrate`.
5. Populate the database with seed data using `rails db:seed`.
6. Start the Rails server with the command `rails server`.

== Entity-Relationship Diagram (ERD)

![DER](app/assets/images/DER.png)

== Postman Collection

- [postman_collection](postman/collection.json)

== Additional Details

- The source code has been organized following best practices in Ruby on Rails development.
- Advanced model associations have been implemented to meet functional requirements.
- Special emphasis has been placed on security by implementing JWT authentication for APIs and securely storing credentials.
- Automated tests have been developed using RSpec to ensure the correct operation of APIs.
- Sidekiq has been used for the implementation of the daily purchase reporting process.
- APIs have been optimized for high performance, avoiding unnecessary SQL queries and using caches where appropriate.
- Cache mechanisms have been implemented in Statistics APIs.
- The first product purchase email has been tested under race conditions.
